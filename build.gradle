buildscript {
	ext {
		springBootVersion = '2.1.0.M4'
		coberturaVersion = '2.3.2'

	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "net.saliman:gradle-cobertura-plugin:${coberturaVersion}"
	}
}
apply plugin: 'java'
apply plugin: "application"
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin : 'cobertura'
apply plugin : 'jacoco'


group = 'com.tgt.myretail.products'
version = '0.0.1'
sourceCompatibility = 1.8
mainClassName       = "com.tgt.myretail.products.api.ProductsApiApplication"

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework:spring-aop')
	implementation('org.aspectj:aspectjweaver')
	implementation('org.springframework.retry:spring-retry')
	implementation('org.apache.commons:commons-lang3:3.5')
	implementation('org.slf4j:log4j-over-slf4j')
	compileOnly('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation 'junit:junit:4.12'

}

jacocoTestReport {
	reports {
		csv.enabled false
		xml.enabled false
		html {
			enabled true
			destination file("$buildDir/reports/jacoco")
		}
	}
	executionData(test)
}
tasks.build.dependsOn(jacocoTestReport)

test {
	testLogging {
		events "passed", "skipped", "failed", "standardError"
	}
	jacoco{
		append = false
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}
